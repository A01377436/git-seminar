#+OPTIONS: toc:nil
# #+LaTeX_CLASS: koma-article

#+LATEX_CLASS: beamer
#+LATEX_CLASS_OPTIONS: [presentation,aspectratio=1610]
#+OPTIONS: H:2

#+LaTex_HEADER: \usepackage{khpreamble}

#+title: git and GitHub - Collaboration and workflow
#+date:

* Objective
** Goal
  *Understanding how to collaborate with git and GitHub*

* Repetition
** What is git?
    A version control system

** What is version control?
   The *correct* solution to a common problem:

   #+BEGIN_LaTeX
          \begin{center}
          \begin{tikzpicture}
            \node (linus) at (0,0) {\includegraphics[width=5cm]{figures/Linus.jpg}};
             \node [draw, align=center,
              cloud callout, cloud puffs = 17, cloud puff arc=140,
              callout pointer segments = 3, anchor = pointer,
   callout relative pointer = {(330:2cm)},
              aspect = 3, ] at (-3, 1.6)
         {Oh no!\\My code doesn't work anymore!\\It worked perfectly last Monday!};
          \end{tikzpicture}
          \end{center}

   #+END_LaTeX



** What is GitHub?

   An online service to host *git* repositories (and a with a lot of services to manage code projects)

** Version control the git way
   #+BEGIN_CENTER
    \includegraphics[width=0.8\linewidth]{figures/checkins.png}
   #+END_CENTER

** Version control the git way

   It is *distributed*!

   #+BEGIN_CENTER
    \includegraphics[width=0.5\linewidth]{figures/distributed.png}
   #+END_CENTER


* Collaboration

** Principles
   * Keep the =master= branch production-ready at all times
   * Do all development in branches
   * Use *pull requests* to handle suggested changes to the =master= branch
   * Two models: *Fork and Pull* and *Shared Repository*
     - Fork and pull :: Contributors fork the repository, make changes and make pull requests
     - Shared repository :: Contributors have push rights to original repository 

** Fork clone and add upstream
   After forking and cloning:
#+BEGIN_SRC shell
git remote add upstream https://github.com/kjartan-at-tec/git-seminar.git
#+END_SRC

** Branch and add changes
   In your cloned fork, create a new branch
#+BEGIN_SRC shell
git checkout -b my-contributions
#+END_SRC

   Modify =README.md=,  add to staging area, commit.

** Submit a pull request
   1. Make your fork's master branch up-to-date with the upstream master
      1. Checkout master
      2. Fetch changes from upstream repository
   2. 
** Let's go online
*** Goal: Understand online/collaborative workflow
    1. Clone a repository
    2. Create a branch to work on
    3. Pull in upstream changes
    4. Merge/rebase
    5. Push to online repository

** (Re)sources

   -  [[https://git-scm.com/book/en/v2/]]
   -  https://www.atlassian.com/git/tutorials/atlassian-git-cheatsheet
